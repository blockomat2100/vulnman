from django.test import TestCase, override_settings
from django.conf import settings
from django.core import mail
from vulnman.core.test import VulnmanTestCaseMixin
from apps.findings import models

class VulnerabilityNotification(TestCase, VulnmanTestCaseMixin):
    def setUp(self):
        self.init_mixin()

    @override_settings(PROJECTS_NOTIFY_CONTRIBUTORS_ON_CRITICAL=True)
    def test_mail_was_sent(self):
        vuln1 = self.create_instance(models.Vulnerability, severity=models.Vulnerability.SEVERITY_CRITICAL,
                                    project=self.project1)
        self.assertEqual(len(mail.outbox), 1)
        # +1 because the creator will receive mail too
        contributor_count = self.project1.projectcontributor_set.count() + 1
        self.assertEqual(len(mail.outbox[0].to), contributor_count)
        self.assertIn(self.read_only1.email, mail.outbox[0].to)

    @override_settings(PROJECTS_NOTIFY_CONTRIBUTORS_ON_CRITICAL=False)
    def test_mail_was_not_sent(self):
        vuln1 = self.create_instance(models.Vulnerability, severity=models.Vulnerability.SEVERITY_CRITICAL,
                                     project=self.project1)
        self.assertEqual(len(mail.outbox), 0)

    @override_settings(PROJECTS_NOTIFY_CONTRIBUTORS_ON_CRITICAL=True)
    def test_mail_severity_high(self):
        vuln1 = self.create_instance(models.Vulnerability, severity=models.Vulnerability.SEVERITY_HIGH,
                                    project=self.project1)
        self.assertEqual(len(mail.outbox), 0)
