# Generated by Django 3.2.9 on 2021-12-10 06:40

import apps.findings.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0009_alter_projectmember_options'),
        ('networking', '0005_alter_hostname_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('findings', '0003_auto_20211206_1249'),
    ]

    operations = [
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(help_text='Markdown supported!')),
                ('cvss_score', models.FloatField(default=0.0)),
                ('cvss_vector', models.CharField(blank=True, max_length=64, null=True, verbose_name='CVSS Vector')),
                ('resolution', models.TextField(blank=True, null=True)),
                ('is_fixed', models.BooleanField(default=False)),
                ('ease_of_resolution', models.CharField(choices=[('undetermined', 'Undetermined'), ('trivial', 'Trivial'), ('simple', 'Simple'), ('moderate', 'Moderate'), ('difficult', 'Difficult'), ('infeasible', 'Infeasible')], max_length=32)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='networking.host')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='networking.service')),
            ],
            options={
                'ordering': ['-cvss_score'],
            },
        ),
        migrations.RenameField(
            model_name='template',
            old_name='remediation',
            new_name='resolution',
        ),
        migrations.AddField(
            model_name='template',
            name='ease_of_resolution',
            field=models.CharField(choices=[('undetermined', 'Undetermined'), ('trivial', 'Trivial'), ('simple', 'Simple'), ('moderate', 'Moderate'), ('difficult', 'Difficult'), ('infeasible', 'Infeasible')], default='undetermined', max_length=32),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('finding', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='findings.finding')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='findings.template')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProofOfConcept',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
                ('image', models.ImageField(blank=True, null=True, upload_to=apps.findings.models.project_pocs_path)),
                ('description', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('finding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findings.finding')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
            options={
                'verbose_name': 'Proof of Concept',
                'verbose_name_plural': 'Proof of Concepts',
                'ordering': ['-date_updated'],
            },
        ),
        migrations.CreateModel(
            name='FindingDetails',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('data', models.TextField(help_text='Markdown supported!')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('finding', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='findings.finding')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='findings.template')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
