from vulnman.api.viewsets import ProjectRelatedObjectViewSet
from api.v1 import generics
from api.v1.serializers import vulnerability as serializers
from api.v1.serializers.proofs import ImageProofSerializer, TextProofSerializer
from apps.findings import models


class AgentVulnerabilityViewSet(generics.AgentModelViewSet):
    queryset = models.Vulnerability.objects.all()
    search_fields = ["name", "template__vulnerability_id"]
    serializer_class = serializers.VulnerabilitySerializer


class AgentTextProofViewSet(generics.AgentModelViewSet):
    queryset = models.TextProof.objects.all()
    search_fields = ["name", "description", "text"]
    serializer_class = serializers.TextProofSerializer


class ProofViewSet(ProjectRelatedObjectViewSet):
    # TODO: improve this one
    # Used to drag&drop reorder proofs in UI
    def get_queryset(self):
        if models.TextProof.objects.filter(pk=self.kwargs.get("pk")).exists():
            return models.TextProof.objects.filter(pk=self.kwargs.get("pk"))
        return models.ImageProof.objects.filter(pk=self.kwargs.get("pk"))

    def get_serializer_class(self):
        if models.TextProof.objects.filter(pk=self.kwargs.get("pk")).exists():
            return TextProofSerializer
        return ImageProofSerializer
