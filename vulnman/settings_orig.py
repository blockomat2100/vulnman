"""
Django settings for vulnman project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
try:
    from vulnman.secret_key import SECRET_KEY
except ImportError:
    from vulnman.utils.secret import generate_secret_key
    generate_secret_key(os.path.join(BASE_DIR, 'vulnman/secret_key.py'))
    from vulnman.secret_key import SECRET_KEY


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # keep before django.contrib.admin
    'dal',
    'dal_select2',
    'queryset_sequence',
    'dal_queryset_sequence',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'django_tex',
    'extra_views',
    'rest_framework',
    'drf_yasg',
    'dry_rest_permissions',
    'crispy_forms',
    "crispy_bootstrap5",
    "guardian",
    "taggit",
    "django-split-settings",
    # apps
    'apps.api.apps.ApiConfig',
    'apps.account.apps.AccountConfig',
    'apps.external_tools.apps.ExternalToolsConfig',
    'apps.reporting.apps.ReportingConfig',
    'apps.projects.apps.ProjectsConfig',
    'apps.dashboard.apps.DashboardConfig',
    'apps.networking.apps.NetworkingConfig',
    'apps.methodologies.apps.MethodologiesConfig',
    'apps.social.apps.SocialConfig',
    'apps.findings.apps.FindingsConfig',
    'apps.agents.apps.AgentsConfig',
    'apps.commands.apps.CommandsConfig',
    'apps.tagging.apps.TaggingConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'guardian.backends.ObjectPermissionBackend',
)

ROOT_URLCONF = 'vulnman.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
    {
        'NAME': 'tex',
        'BACKEND': 'django_tex.engine.TeXEngine',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'environment': 'apps.reporting.environment.tex_report_env',
        }
    },
]

WSGI_APPLICATION = 'vulnman.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}









LATEX_INTERPRETER = 'latexmk -pdf'

# for some reasons only works with os.path.join and not with pathlib
LATEX_GRAPHICSPATH = [
    os.path.join(BASE_DIR, "apps/reporting/templates/report/assets"),
    os.path.join(BASE_DIR, "uploads/proofs"),
    os.path.join(BASE_DIR, "templates/custom/report/assets")
]

SEVERITY_COLORS = {
    'Critical': {'hex': '9c1720', 'chart_border': 'rgba(156, 23, 32, 1)', 'chart': 'rgba(156, 23, 32, 0.2)'},
    'High': {'hex': 'd13c0f', 'chart_border': 'rgba(209, 60, 15, 1)', 'chart': 'rgba(209, 60, 15, 0.2)'},
    'Medium': {'hex': 'e8971e', 'chart_border': 'rgba(232, 151, 30, 1)', 'chart': 'rgba(232, 151, 30, 0.2)'},
    'Low': {'hex': '2075f5', 'chart_border': 'rgba(32, 117, 245, 1)', 'chart': 'rgba(32, 117, 245, 0.2)'},
    'None': {'hex': '059D1D', 'chart_border': 'rgba(5, 157, 29, 1)', 'chart': 'rgba(5, 157, 29, 0.2)'},
    'Information': {'hex': '059D1D', 'chart_border': 'rgba(5, 157, 29, 1)', 'chart': 'rgba(5, 157, 29, 0.2)'},
}

VULNMAN_CSS_THEME = "vulnman-dark"

HOST_OS_ICONS = {
    "linux": {
        "icon": "fa fa-linux", "matches": ["Ubuntu", "Fedora", "Arch-Linux", "Debian", "Linux"]
    }
}

# Reporting
REPORT_COMPANY_INFORMATION = {
    "name": "Vulnman",
    "street": "No Street 54",
    "zip": "123456 Berlin, Germany",
    "homepage": "https://vulnman.github.io/vulnman",
    "contact": "contact@example.com"
}

TAGGIT_CASE_INSENSITIVE = True

CUSTOM_EXTERNAL_TOOLS = {}

REPORT_TEMPLATE = "report/html_default/report.html"
REPORT_TEMPLATE_STYLESHEETS = [
    os.path.join(BASE_DIR, "apps/reporting/templates/report/html_default/report.css"),
]

REPORT_SECTION_DEFAULTS_DIR = os.path.join(BASE_DIR, "apps/reporting/templates/report/html_default/defaults")

REPORT_SECTIONS = {
    "assessment_overview": os.path.join(REPORT_SECTION_DEFAULTS_DIR, "02_assessment_overview.md"),
    "methodology": os.path.join(REPORT_SECTION_DEFAULTS_DIR, "03_methodology.md")
}
CUSTOM_REPORT_SECTIONS = {}

# API Settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 50,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning'
    # 'DEFAULT_RENDERER_CLASSES': [
    #    'rest_framework.renderers.JSONRenderer'
    # ]
}

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"


try:
    from local_settings import *
except ImportError:
    pass

# update the default EXTERNAL_TOOLS dict with a custom one provided by the user
EXTERNAL_TOOLS.update(CUSTOM_EXTERNAL_TOOLS)
REPORT_SECTIONS.update(CUSTOM_REPORT_SECTIONS)
